{
  "openapi": "3.0.3",
  "info": {
    "title": "LoyalBox API",
    "description": "API for a loyalty program where users can register, log in, earn points, redeem rewards, and admins can manage rewards and user activities.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "671f3a0b2c3d4e5f6a7b8c9c"
          },
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "points": {
            "type": "number",
            "example": 10
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin"],
            "example": "user"
          }
        },
        "required": ["_id", "username", "points", "role"]
      },
      "Reward": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "671f3a1b2c3d4e5f6a7b8c9d"
          },
          "name": {
            "type": "string",
            "example": "Gift Card"
          },
          "pointsRequired": {
            "type": "number",
            "example": 100
          },
          "description": {
            "type": "string",
            "example": "$10 Gift Card"
          }
        },
        "required": ["_id", "name", "pointsRequired"]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "671f3b2c3d4e5f6a7b8c9e0f"
          },
          "user": {
            "type": "string",
            "example": "671f3a0b2c3d4e5f6a7b8c9c"
          },
          "type": {
            "type": "string",
            "enum": ["purchase", "redeem"],
            "example": "purchase"
          },
          "points": {
            "type": "number",
            "example": 10
          },
          "description": {
            "type": "string",
            "example": "Purchased Coffee"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-21T10:58:00.000Z"
          }
        },
        "required": ["_id", "user", "type", "points", "date"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Error message"
          },
          "error": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": ["message"]
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "testuser"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error registering user (e.g., username exists)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Log in a user and get JWT token",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "testuser"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/rewards": {
      "get": {
        "summary": "Get all available rewards",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of rewards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reward"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/purchase": {
      "post": {
        "summary": "Simulate purchasing an item and earning points",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "itemName": {
                    "type": "string",
                    "example": "Coffee"
                  },
                  "points": {
                    "type": "number",
                    "example": 10
                  }
                },
                "required": ["itemName", "points"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Purchase successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Purchase successful"
                    },
                    "points": {
                      "type": "number",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/redeem": {
      "post": {
        "summary": "Redeem points for a reward",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rewardId": {
                    "type": "string",
                    "example": "671f3a1b2c3d4e5f6a7b8c9d"
                  }
                },
                "required": ["rewardId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reward redeemed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Reward redeemed"
                    },
                    "points": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Insufficient points or invalid reward",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/transactions": {
      "get": {
        "summary": "Get user's transaction history",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/rewards": {
      "post": {
        "summary": "Create a new reward",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Gift Card"
                  },
                  "pointsRequired": {
                    "type": "number",
                    "example": 100
                  },
                  "description": {
                    "type": "string",
                    "example": "$10 Gift Card"
                  }
                },
                "required": ["name", "pointsRequired"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reward created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Reward created"
                    },
                    "reward": {
                      "$ref": "#/components/schemas/Reward"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/rewards/{rewardId}": {
      "put": {
        "summary": "Update a reward",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "671f3a1b2c3d4e5f6a7b8c9d"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Gift Card"
                  },
                  "pointsRequired": {
                    "type": "number",
                    "example": 150
                  },
                  "description": {
                    "type": "string",
                    "example": "$15 Gift Card"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reward updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Reward updated"
                    },
                    "reward": {
                      "$ref": "#/components/schemas/Reward"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Reward not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a reward",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "671f3a1b2c3d4e5f6a7b8c9d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reward deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Reward deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Reward not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{userId}/history": {
      "get": {
        "summary": "Get a user's transaction history",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "671f3a0b2c3d4e5f6a7b8c9c"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/promote": {
      "post": {
        "summary": "Promote a user to admin",
        "tags": ["Admin"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "671f3a0b2c3d4e5f6a7b8c9c"
                  }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User promoted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User promoted to admin"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User registration and login endpoints"
    },
    {
      "name": "User",
      "description": "Endpoints for authenticated users to manage points and rewards"
    },
    {
      "name": "Admin",
      "description": "Endpoints for admin users to manage rewards and users"
    }
  ]
}